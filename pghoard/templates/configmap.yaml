apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app: {{ template "name" . }}
data:
  pghoard.json: |-
    {
      "backup_location": "/var/lib/pghoard/incoming",
      "backup_sites": {
        "{{ .Values.postgresql.host }}": {
          "basebackup_mode": "pipe",
          "object_storage":{
{{- if (eq "local" .Values.objectStorage.storageType) }}
            "storage_type": "local",
            "directory": "{{ .Values.objectStorage.directory }}"
{{- end }}
{{- if (eq "s3" .Values.objectStorage.storageType) }}
            "storage_type": "s3",
            "aws_access_key_id": "{{ .Values.objectStorage.awsAccessKeyId }}",
            "aws_secret_access_key": "{{ .Values.objectStorage.awsSecretAccessKey }}",
            "region": "{{ .Values.objectStorage.region }}",
{{- if .Values.objectStorage.host }}
            "host": "{{ .Values.objectStorage.host }}",
{{- end }}
{{- if .Values.objectStorage.port }}
            "port": {{ .Values.objectStorage.port }},
{{- end }}
{{- if .Values.objectStorage.isSecure }}
            "is_secure": "{{ .Values.objectStorage.isSecure }}",
{{- end }}
            "bucket_name": "{{ .Values.objectStorage.bucketName }}"

{{- end }}
          },
          "nodes": [
            {
              "host": "{{ .Values.postgresql.host }}",
              "port": "{{ .Values.postgresql.port }}",
              "password": "{{ .Values.postgresql.password }}",
              "user": "{{ .Values.postgresql.user }}"
            }
          ],
          "pg_data_directory": "/home/postgres/restore"
        }
      }
    }
