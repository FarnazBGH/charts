---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "puppetserver.fullname" . }}-user-confdir
  labels:
    app.kubernetes.io/name: {{ include "puppetserver.name" . }}
    helm.sh/chart: {{ include "puppetserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  puppet.conf: |
    [main]
    ssldir = /etc/puppetlabs/puppet/ssl
    server = {{ include "puppetserver.fullname" . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "puppetserver.fullname" . }}-puppetserver
  labels:
    app.kubernetes.io/name: {{ include "puppetserver.name" . }}
    helm.sh/chart: {{ include "puppetserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  ca.conf: |
{{ .Values.ca_conf | indent 4 }}
  auth.conf: |
{{ .Values.auth_conf | indent 4 }}
  logback.xml: |
    <configuration scan="true">
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
        </appender>

        <logger name="org.eclipse.jetty" level="INFO"/>
        <logger name="com.puppetlabs.puppetserver.LoggingPuppetProfiler" level="INFO"/>

        <root level="info">
            <appender-ref ref="STDOUT"/>
        </root>
    </configuration>
  request-logging.xml: |
    <configuration debug="false" scan="true">
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.AccessEventCompositeJsonEncoder">
                <providers>
                    <version/>
                    <pattern>
                        <pattern>
                            {
                              "@timestamp":"%date{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}",
                              "clientip":"%remoteIP",
                              "auth":"%user",
                              "verb":"%requestMethod",
                              "requestprotocol":"%protocol",
                              "rawrequest":"%requestURL",
                              "response":"#asLong{%statusCode}",
                              "bytes":"#asLong{%bytesSent}",
                              "total_service_time":"#asLong{%elapsedTime}",
                              "request":"http://%header{Host}%requestURI",
                              "referrer":"%header{Referer}",
                              "agent":"%header{User-agent}",

                              "request.host":"%header{Host}",
                              "request.accept":"%header{Accept}",
                              "request.accept-encoding":"%header{Accept-Encoding}",
                              "request.connection":"%header{Connection}",

                              "puppet.client-verify":"%header{X-Client-Verify}",
                              "puppet.client-dn":"%header{X-Client-DN}",
                              "puppet.client-cert":"%header{X-Client-Cert}",

                              "response.content-type":"%responseHeader{Content-Type}",
                              "response.content-length":"%responseHeader{Content-Length}",
                              "response.server":"%responseHeader{Server}",
                              "response.connection":"%responseHeader{Connection}"
                            }
                        </pattern>
                    </pattern>
                </providers>
            </encoder>
        </appender>

        <appender-ref ref="STDOUT"/>
    </configuration>
  metrics.conf: |
    # settings related to metrics
    metrics: {
        # a server id that will be used as part of the namespace for metrics produced
        # by this server
        server-id: localhost
        registries: {
            puppetserver: {
                # specify metrics to allow in addition to those in the default list
                #metrics-allowed: ["compiler.compile.production"]

                reporters: {
                    # enable or disable JMX metrics reporter
                    jmx: {
                        enabled: true
                    }
                    # enable or disable Graphite metrics reporter
                    graphite: {
                        enabled: true
                    }
                }

            }
        }

        # this section is used to configure settings for reporters that will send
        # the metrics to various destinations for external viewing
        reporters: {
            graphite: {
                # graphite host
                host: "127.0.0.1"
                # graphite metrics port
                port: 9109
                # how often to send metrics to graphite
                update-interval-seconds: 5
            }
        }
        metrics-webservice: {
            jolokia: {
                # Enable or disable the Jolokia-based metrics/v2 endpoint.
                # Default is true.
                # enabled: false

                # Configure any of the settings listed at:
                #   https://jolokia.org/reference/html/agents.html#war-agent-installation
                servlet-init-params: {
                    # Specify a custom security policy:
                    #  https://jolokia.org/reference/html/security.html
                    # policyLocation: "file:///etc/puppetlabs/puppetserver/jolokia-access.xml"
                }
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "puppetserver.fullname" . }}-puppet
  labels:
    app.kubernetes.io/name: {{ include "puppetserver.name" . }}
    helm.sh/chart: {{ include "puppetserver.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  puppet.conf: |
{{ .Values.puppet_conf | indent 4 }}
  hiera.yaml: |
    ---
    version: 5
  autosign: |
{{ .Values.autosign.script | indent 4 }}
  puppetdb.conf: |
{{ .Values.puppetdb_conf | indent 4 }}
  routes.yaml: |
{{ .Values.routes_yaml | indent 4 }}
