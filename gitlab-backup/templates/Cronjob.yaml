apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: gitlab-backup-cron
spec:
  # run every day
  schedule: "0 0 * * *" 
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: gitlab-backup-cron
          containers:
          - name: gitlab-backup-cron-oc-client
            image: ebits/openshift-client@sha256:31c5e7dba9ea7987c55b1ff7b7e6ad6f35d4eb6124dfbb86b66024104f7b60ff
            args:
            - /bin/sh
            - -c
            - oc exec $(oc get pod  -o jsonpath='{.items.*.metadata.name}' | sed 's/ /\n/g' | grep 'gitlab-task-runner-') -it '
              output=$(backup-utility);
              RESULT=$?;
              METRICS= $(echo "$output" | awk -v "h=$HOSTNAME" -v "ostype=$OSTYPE"  \'/ .*\[.*\]/{
              gsub("Dumping","");
              print "#TYPE " $1 " gauge";
              gsub("\[DONE\]",0);
              gsub("\[SKIPPED\]",1);
              gsub("\[WARNING\]",2);
              gsub("\[ERROR\]",3);
              gsub("\[.*\]",4);
              gsub(" \* ","");
              printf $1 "{certname=\"%s\",os=\"%s\",project=\"chtopo/gitlab-backup\",line=\"production\",sre_team=\"sret1\"} %d\n",h,ostype, $NF;
              }\'; echo -e "#TYPE gitlab-backup-success gauge\ngitlab-backup-success{certname=\"$HOSTNAME\",os=\"$OSTYPE\",\"chtopo/gitlab-backup\",line=\"production\",sre_team=\"sret1\} $RESULT\n");
              echo -e "$METRICS" | curl --data-binary @- http://infra-metrics-prometheus-pushgateway.infra-metrics.svc:9091
              ' || exit 0
          restartPolicy: Never
