{{- if .Values.backup.enabled }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name:  {{ include "php.fullname" . }}-backup-config
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
          - command:
            - /bin/sh
            - -c
            - sh /backup-script/backup.sh
            image: databack/mysql-backup
            imagePullPolicy: IfNotPresent
            name: backup
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/www/vhosts
              name: www-data
            - mountPath: /backup-script/
              name: backup-script
            env:
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: backups3
                    key: AWS_ACCESS_KEY_ID
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: backups3
                    key: AWS_SECRET_ACCESS_KEY
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext:
            runAsUser: 1000
          terminationGracePeriodSeconds: 30
          volumes:
          - name: www-data
            persistentVolumeClaim:
              claimName: "{{ .Values.storage.pvName }}"
          - configMap:
              defaultMode: 420
              name:  {{ include "php.fullname" . }}-backup-config
            name: backup-script
  schedule: '@daily'
  successfulJobsHistoryLimit: 3
  suspend: false
{{- end }}
