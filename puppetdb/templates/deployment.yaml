apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "puppetdb.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "puppetdb.name" . }}
    helm.sh/chart: {{ include "puppetdb.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "puppetdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "puppetdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ .Chart.Name }}-autosign
          image: "docker.io/puppet/puppet-agent:latest"
          command: ["sh", "-c"]
          args:
            - "psk=$(cat /run/secrets/autosign_psk); hostname=$(puppet config print certname | tr -d '\n'); echo \"custom_attributes:\n  1.2.840.113549.1.9.7: 'hashed;$(echo -n $psk/$hostname/puppetdb/production | openssl dgst -binary -sha256 | openssl base64)'\nextension_requests:\n  pp_role: 'puppetdb'\n  pp_environment: 'production'\" > /etc/puppetlabs/puppet/csr_attributes.yaml; puppet agent -t --noop --environment production --server puppetserver --waitforcert 60 --confdir /etc/puppetlabs/puppet; cd /etc/puppetlabs/puppet/ssl && cp private_keys/$hostname.pem private_keys/puppetdb.pem && cp certs/$hostname.pem certs/puppetdb.pem ; find /etc/puppetlabs/puppet -ls"
          env:
            - name: HOME
              value: /tmp
          volumeMounts:
            - mountPath: /run/secrets/autosign_psk
              name: secrets
              subPath: autosign_psk
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "java" ]
          args: [ "-Djava.net.preferIPv4Stack=true", "-Xms256m", "-Xmx256m",
            "-cp", "/puppetdb.jar", "clojure.main",
            "-m", "puppetlabs.puppetdb.core", "services", "-c",
            "/etc/puppetlabs/puppetdb/conf.d/" ]
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          volumeMounts:
            - mountPath: /opt/puppetlabs/server/data/puppetdb
              name: data
            - mountPath: /etc/puppetlabs/puppetdb/conf.d/
              name: conf-d
            - mountPath: /etc/puppetlabs/puppet
              name: confdir
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      securityContext:
        supplementalGroups: [999]
      volumes:
        - name: data
          emptyDir: {}
        - name: confdir
          emptyDir: {}
        - name: secrets
          secret:
            secretName: {{ include "puppetdb.fullname" . }}
        - name: conf-d
          configMap:
            name: {{ include "puppetdb.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
