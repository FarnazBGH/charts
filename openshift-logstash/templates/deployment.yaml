apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openshift-logstash.fullname" . }}
  labels:
    app: {{ template "openshift-logstash.name" . }}
    chart: {{ template "openshift-logstash.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "openshift-logstash.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "openshift-logstash.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ template "openshift-logstash.fullname" . }}-logstashconf
          image: {{ .Values.openshiftRegistry }}/{{ .Release.Namespace }}/{{ template "openshift-logstash.fullname" . }}-logstashconf:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: logstash-config
              mountPath: /etc/logstash
          args: ["/bin/sh", "-c", "cp -r /logstash/* /etc/logstash/"]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: logstash-config
              mountPath: /etc/logstash
              readOnly: true
          command:
            - logstash
          args:
            - '--path.data=/tmp'
            - '-f'
            - '/etc/logstash/conf/*.conf'
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: logstash-config
          emptyDir: {}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
